function destroyTestGameBoard(){testGameBoard&&testGameBoard.dispose()}function setupTestGameBoard(){return testGameBoard=new Game.GameBoard("testGameBoard"),testGameBoard.init(),testGameBoard.renderMapZone({worldX:0,worldY:0}),testGameBoard.renderMapZone({worldX:512,worldY:0}),testGameBoard}var Game,testGameBoard;(function(n){var t=function(){function n(){}return n.prototype.getWorldX=function(){return this.ZoneData.worldX},n.prototype.getWorldY=function(){return this.ZoneData.worldY},n.prototype.getWidth=function(){return 512},n.prototype.getHeight=function(){return 512},n}(),i;n.MapZoneLayer=t,i=function(){function n(n){this.gameBoardID=n,this.entities=[],this.mapZoneLayers=[]}return n.prototype.init=function(){var t=this,i=$("#"+this.gameBoardID),n=i.parent().width(),r=n;this.stage=new Kinetic.Stage({container:this.gameBoardID,width:n,height:r,draggable:!0}),this.movableEntitiesLayer=new Kinetic.Layer,this.stage.add(this.movableEntitiesLayer),this._gameLoopInterval=setInterval(function(){t.gameLoop()},250)},n.prototype.gameLoop=function(){for(var i=this.entities.length,t,n=0;n<i;n++)t=this.entities[n],t.tick()},n.prototype.dispose=function(){clearInterval(this._gameLoopInterval),this.stage.remove()},n.prototype.renderMapZone=function(n){var i=new t;i.KineticLayer=new Kinetic.Layer,i.ZoneData=n;var r=n.worldX,u=n.worldY,f=new Kinetic.Rect({x:r,y:u,width:i.getWidth(),height:i.getHeight(),name:"background",fill:"white"});i.KineticLayer.add(f),this.stage.add(i.KineticLayer),this.mapZoneLayers.push(i),i.KineticLayer.moveToBottom()},n.prototype.getLayerUnderPoint=function(n){for(var f=this.mapZoneLayers.length,i=0;i<f;i++){var t=this.mapZoneLayers[i],r=t.getWorldX(),u=t.getWorldY(),e=r+t.getWidth(),o=u+t.getHeight();if(r<=n&&n<=e&&u<=n&&n<=o)return t}throw new Error("Unable to find a zone under point. There must have been a data loading error in the GameBoard.");},n.prototype.addEntity=function(n){var i,t;this.entities.push(n),n.setGameBoard(this),n.canMove()?(n.setParentLayer(this.movableEntitiesLayer,0,0),i=n.getKineticGroup(),this.movableEntitiesLayer.add(i)):(t=this.getLayerUnderPoint(n._x,n._y),n.setParentLayer(t.KineticLayer,t.getWorldX(),t.getWorldY()),i=n.getKineticGroup(),t.KineticLayer.add(i))},n}(),n.GameBoard=i})(Game||(Game={})),QUnit.module("GameBoard"),QUnit.testDone(function(){destroyTestGameBoard()}),QUnit.test("getLayerUnderPoint",function(){var i=setupTestGameBoard(),n={worldX:1024,worldY:1024},t;i.renderMapZone(n),t=testGameBoard.getLayerUnderPoint(1026,1026),QUnit.ok(t.ZoneData==n,"checking zone is valid")})